name: Build Electron App & Release

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build (windows)
        if: matrix.os == 'windows-latest'
        run: |
          npm run build
          npx electron-builder --win --x64 --config.extraMetadata.version=${{ github.ref_name }}
        env:
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

      - name: Build (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run build
          npx electron-builder --linux --x64 --config.extraMetadata.version=${{ github.ref_name }}
        env:
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.AppImage
            dist/*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
